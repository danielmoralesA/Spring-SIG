#configuracion para realizar la coneccion a postgresql
spring.datasource.url = jdbc:postgresql://localhost:5432/sigtma?useSSL=false
#nombre de usuario y password
spring.datasource.username = postgres
spring.datasource.password = 12345

#desactivamos la seguirdad basica por defecto mientras activamos security
security.basic.enabled=true

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto =update


# ===============================
# = JPA / HIBERNATE

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


# url para spring
server.contextPath=/sigtma/
server.session.timeout=60

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select nom_usuario, password,activo from usuarios where nom_usuario=?
spring.queries.roles-query=select u.nom_usuario, r.nom_rol from usuarios u inner join user_rol ur on(u.id_usuario=ur.user_id) inner join roles r on(ur.role_id=r.id_rol) where u.nom_usuario=?
